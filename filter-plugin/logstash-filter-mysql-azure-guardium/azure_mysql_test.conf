input
   {
 generator { 
	  type => "azure_mysql"
	  message => '{"records":[{"category":"MySqlAuditLogs","properties":{"category":"MySqlAuditLogs","event_class":"general_log","replication_set_role":"single","event_subclass":"LOG","event_time":"2023-04-17T06:22:08.0000000Z","error_code":0,"thread_id":21,"host":"","ip":"20.204.110.141","user":"test[test] @  [20.204.110.141]","sql_text":"select * from resourcetable"},"resourceId":"\/SUBSCRIPTIONS\/083DE1FB-CD2D-4B7C-895A-2B5AF1D091E8\/RESOURCEGROUPS\/NEWRESOURCEGUARDIUM\/PROVIDERS\/MICROSOFT.DBFORMYSQL\/FLEXIBLESERVERS\/MYSQL-TEST-GUARDIUM","ServerType":"MySQL"}]}'
	  count => 1
  }
   }

filter{
if [type] == "azure_mysql"
    {
        json 
			{
				source => "message" 
            }
        split
			{
				field => "records"
			}
		mutate  
			{
				add_field => {"pre_fix" => "%{[records]}"}
			}						
		mutate
			{
				remove_field => [ "message"]
				remove_field => [ "tags"]
				remove_field => [ "@version"]
				remove_field => [ "records"]
			}	
		mutate
			{
				rename => { "pre_fix" => "message" }
			}
		json 
			{
				source => "message"
				target => "newnode"				
            }
		mutate  
			{
				add_field => {"sqltext" => "%{[newnode][properties][sql_text]}"}
				add_field => {"errorcode" => "%{[newnode][properties][error_code]}"}
				add_field => {"resource" => "%{[newnode][properties][error_code]}"}
			}
		mutate
			{
				remove_field => [ "newnode"]
			}
		if [sqltext] == "SELECT 1" or [sqltext] =~ /(?i)SELECT @@session.transaction_read_only/ or [sqltext] =~ /(?i)SHOW WARNINGS/ or [sqltext] =~ /(?i)SET SQL_SELECT_LIMIT=DEFAULT/ or [sqltext] =~ /(?i)SET SQL_SELECT_LIMIT=1000/ or [sqltext] =~ /(?i)SELECT @@SESSION.sql_mode/ or [sqltext] =~ /(?i)SELECT @@session.transaction_isolation/ or [sqltext] =~ /(?i)select 1 from information_schema.CHECK_CONSTRAINTS LIMIT 1/ or [sqltext] =~ /(?i)SET autocommit=1/ or [sqltext] =~ /(?i)SET character_set_results = NULL/ or [sqltext] =~ /(?i)SHOW COLLATION/ or [sqltext] =~ /(?i)SELECT TABLE_SCHEMA AS TABLE_CAT, NULL AS TABLE_SCHEM, TABLE_NAME, COLUMN_NAME, SEQ_IN_INDEX AS KEY_SEQ, 'PRIMARY' AS PK_NAME FROM INFORMATION_SCHEMA.STATISTICS/ or [sqltext] =~ /(?i)select @@version_comment limit 1/ or [sqltext] =~ /(?i)SET autocommit=0/
		or [sqltext] =~ /(?i)commit/ or [sqltext] =~ /(?i)rollback/ or [sqltext] =~ /(?i)mysql-connector-java-8.0.30/ or [sqltext] =~ /(?i)SET sql_log_bin = OFF/ or [sqltext] =~ /(?i)GRANT ALL PRIVILEGES ON/ or [sqltext] =~ /(?i)GRANT REPLICATION_APPLIER/ or [sqltext] =~ /(?i)@@session.auto_increment_increment AS auto_increment_increment/ or [sqltext] == "SET NAMES utf8mb4" or [sqltext] =~ /(?i)SELECT TABLE_SCHEMA AS TABLE_CAT/ or [errorcode] == "1295"
			{
				drop{}
			}
		mutate
			{
				remove_field => [ "sqltext"]
				remove_field => [ "errorcode"]
			}
		grok 
			{
				match => { "message" => ".*\"sql_text\":\"(?<sql_text>.*?)\"" }
			}
		if [sql_text] =~ /^(?i)use/ 
			{
				drop {}
			}
		if [sql_text] =~ /(?i)select database()/ 
			{
				drop {}
			}
		azure_mysql_guardium_filter{}
	}
}

output {
stdout { codec => rubydebug }
}
