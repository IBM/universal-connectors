//
// Copyright IBM Corp. 2023 All rights reserved.
// SPDX-License-Identifier: Apache-2.0
//
input
	{
		azure_event_hubs 
			{
				config_mode => "basic"
				#Insert primary connection string from shared access policies in event hub namespace from azure portal
				event_hub_connections => ["<Connection stringâ€“primary key>;EntityPath=<Eventhub instance name>"]
				initial_position => "end"
				threads => 16
				decorate_events => true 
				consumer_group => "$Default"
				#Insert the Connection string in storage_connection from the Access Keys present in the Storage account from azure portal.
				storage_connection => "<Connection string>"
				type => "azure_mysql"	
			}
	}
	
filter{
if [type] == "azure_mysql"
    {
        json 
			{
				source => "message" 
            }
        split
			{
				field => "records"
			}
		mutate  
			{
				add_field => {"pre_fix" => "%{[records]}"}
			}						
		mutate
			{
				remove_field => [ "message"]
				remove_field => [ "tags"]
				remove_field => [ "@version"]
				remove_field => [ "records"]
			}	
		mutate
			{
				rename => { "pre_fix" => "message" }
			}
		json 
			{
				source => "message"
				target => "newnode"				
            }
		mutate  
			{
				add_field => {"sqltext" => "%{[newnode][properties][sql_text]}"}
				add_field => {"errorcode" => "%{[newnode][properties][error_code]}"}
				add_field => {"resource" => "%{[newnode][properties][error_code]}"}
			}
		mutate
			{
				remove_field => [ "newnode"]
			}
		#To remove the system-generated log, you need to add the SQL message of that log in the condition below.
		#For Ex: [sqltext] =~ /(?i)SHOW SESSION VARIABLES LIKE 'interactive_timeout'/
		if [sqltext] == "SELECT 1" or [sqltext] =~ /(?i)SELECT @@session.transaction_read_only/ or [sqltext] =~ /(?i)SHOW WARNINGS/ or [sqltext] =~ /(?i)SET SQL_SELECT_LIMIT=DEFAULT/ or [sqltext] =~ /(?i)SET SQL_SELECT_LIMIT=1000/ or [sqltext] =~ /(?i)SELECT @@SESSION.sql_mode/ or [sqltext] =~ /(?i)SELECT @@session.transaction_isolation/ or [sqltext] =~ /(?i)select 1 from information_schema.CHECK_CONSTRAINTS LIMIT 1/ or [sqltext] =~ /(?i)SET autocommit=1/ or [sqltext] =~ /(?i)SET character_set_results = NULL/ or [sqltext] =~ /(?i)SHOW COLLATION/ or [sqltext] =~ /(?i)SELECT TABLE_SCHEMA AS TABLE_CAT, NULL AS TABLE_SCHEM, TABLE_NAME, COLUMN_NAME, SEQ_IN_INDEX AS KEY_SEQ, 'PRIMARY' AS PK_NAME FROM INFORMATION_SCHEMA.STATISTICS/ or [sqltext] =~ /(?i)select @@version_comment limit 1/ or [sqltext] =~ /(?i)SET autocommit=0/
		or [sqltext] =~ /(?i)commit/ or [sqltext] =~ /(?i)rollback/ or [sqltext] =~ /(?i)mysql-connector-java-8.0.30/ or [sqltext] =~ /(?i)SET sql_log_bin = OFF/ or [sqltext] =~ /(?i)GRANT ALL PRIVILEGES ON/ or [sqltext] =~ /(?i)GRANT REPLICATION_APPLIER/ or [sqltext] =~ /(?i)@@session.auto_increment_increment AS auto_increment_increment/ or [sqltext] == "SET NAMES utf8mb4" or [sqltext] =~ /(?i)SELECT TABLE_SCHEMA AS TABLE_CAT/ or [errorcode] == "1295"
			{
				drop{}
			}
		mutate
			{
				remove_field => [ "sqltext"]
				remove_field => [ "errorcode"]
			}
		grok 
			{
				match => { "message" => ".*\"sql_text\":\"(?<sql_text>.*?)\"" }
			}
		if [sql_text] =~ /^(?i)use/ 
			{
				drop {}
			}
		if [sql_text] =~ /(?i)select database()/ 
			{
				drop {}
			}
		azure_mysql_guardium_filter{}
	}
}
