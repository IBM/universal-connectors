//
// Copyright IBM Corp. 2024 All rights reserved.
// SPDX-License-Identifier: Apache-2.0
//


input{
generator {
lines =>
[
"2024-02-20T04:03:14.428701-08:00 hcl-test1 scylla-audit[8595]:\"10.21.65.178:0\", \"DML\", \"ONE\", \"\", \"mykeyspace\", \"use mykeyspace;\", \"9.43.118.0:0\", \"cassandra\", \"false\"",
"2024-02-20T04:03:11.650544-08:00 hcl-test1 scylla-audit[8595]:\"10.21.65.178:0\", \"DDL\", \"ONE\", \"\", \"mykeyspace\", \"CREATE KEYSPACE mykeyspace WITH replication = {'class': 'NetworkTopologyStrategy', 'replication_factor': '1'}  AND durable_writes = true;\", \"9.43.118.0:0\", \"cassandra\", \"false\""
]
count => 1
type => "scylladb"
}
}
filter {
if [type] == "scylladb" {
	
	grok{
		   match => {"message" => "(?<timestamp>[^\s]*)\s(?<logsource>[^\s]*)\s(?<scyllatype>[^\s]*):\s?(?<server_ip>[^\s]*):(?<server_port>[^\s]*),\s(?<category>[^\s]*),\s(?<consistency>[^\s]*),\s(?<table_name>[^\s]*),\s(?<keyspace_name>[^\s]*),\s%{GREEDYDATA:operation},\s(?<client_ip>[^\s]*):(?<client_port>[^\s]*),\s(?<username>[^\s]*),\s(?<error>[^\s]*)"
		   }
	}
	if "_grokparsefailure"  in [tags]
	{
		drop{}
	}
	mutate
	{
		remove_field => ["tags"]
	}	
	scylladb_guardium_filter{}
	# Remove unnecessary fields
	prune {
            whitelist_names => [ "GuardRecord"]
      }
	}
}
output {
    stdout { codec => rubydebug {} }
}