input{
jdbc {
    jdbc_driver_class => "com.sap.db.jdbc.Driver"
    jdbc_connection_string => "jdbc:sap://<server-name>:<db-port-number>/?databaseName=<db-name>&user=<user_name>&password=<password>"
	jdbc_user => "<user_name>"
    jdbc_password => "<password>"
    statement => "select audit_log.event_status,audit_log.client_ip,audit_log.connection_id,audit_log.client_port,SECONDS_BETWEEN ('1970-01-01 00:00:00.00000',localtoutc(audit_log.timestamp)) as new_timestamp,audit_log.event_action,audit_log.user_name,audit_log.port,audit_log.client_host,audit_log.service_name,audit_log.statement_string,audit_log.application_name,audit_log.host,audit_log.application_user_name,M_DATABASE.database_name,M_DATABASE.system_id from M_DATABASE,audit_log where M_DATABASE.HOST = audit_log.HOST and audit_policy_name not in ('MandatoryAuditPolicy') and SECONDS_BETWEEN ('1970-01-01 00:00:00.00000',localtoutc(audit_log.timestamp)) > :sql_last_value;"
	use_column_value => true
	tracking_column_type => "numeric"
	tracking_column => "new_timestamp"
	#This location stores the Timestamp till which records are processed
	last_run_metadata_path => "./.saphana_logstash_jdbc_last_run"
	type => "SAPHANA"
	schedule => "*/2 * * * *"
  }
 }
filter
{
  if [type]=="SAPHANA" {

  ruby { code => "event.set('finalTime', event.get('new_timestamp').to_i * 1000)" }

	mutate { add_field => { "[Session_ID]" => "%{connection_id}" }}
	mutate { add_field => { "[Schema_NAME]" => "%{database_name}" }}
	mutate { add_field => { "[ts]" => "%{finalTime}" }}
	mutate { add_field => { "[Application_username]" => "%{application_user_name}" }}
	mutate { add_field => { "[Hostname]" => "%{host}" }}
	mutate { add_field => { "[SOURCE_PROGRAM]" => "%{application_name}" }}
	mutate { add_field => { "[Audit_Action]" => "%{event_action}" }}
	if [statement_string]
	{
		mutate { add_field => { "[Executed_Statement]" => "%{statement_string}" }}
	}
	if [user_name]
	{
		mutate { add_field => { "[Active_User]" => "%{user_name}" }}
	}
	mutate { add_field => { "[SERVICE_NAME]" => "%{system_id}" }}
	mutate { add_field => { "[Client_Name]" => "%{client_host}" }}
	mutate { add_field => { "[Port_Number]" => "-1" }}
	mutate { add_field => { "[Client_Port_Number]" => "%{client_port}" }}
	mutate { add_field => { "[Client_IP]" => "%{client_ip}" }}
	mutate { add_field => { "[Action_Status]" => "%{event_status}" }}

	fingerprint {
               source => ["ts", "Session_ID", "Executed_Statement"]
			   concatenate_sources => true
			}

	saphana_guardium_plugin_filter{}

mutate{ remove_field =>["finalTime","new_timestamp","system_id","SERVICE_NAME","service_name","database_name","Schema_NAME","fingerprint","Action_Status","Client_IP","Client_Port_Number","Port_Number","Client_Name","type","@timestamp","@version","Executed_Statement","Audit_Action","Active_User","SOURCE_PROGRAM","Hostname","Application_username","ts","Session_ID","event_status","client_ip","connection_id","client_port","timestamp","connection_id","client_port","event_action","user_name","port","client_host","statement_string","application_name","host","application_user_name"]}
}
}
