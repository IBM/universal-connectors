:plugin: MongoDB-Guardium filter
:type: filter
// Update header with plugin name

///////////////////////////////////////////
START - GENERATED VARIABLES, DO NOT EDIT!
///////////////////////////////////////////
:version: %VERSION%
:release_date: %RELEASE_DATE%
:changelog_url: %CHANGELOG_URL%
:include_path: ../../../../logstash/docs/include
///////////////////////////////////////////
END - GENERATED VARIABLES, DO NOT EDIT!
///////////////////////////////////////////

[id="plugins-{type}s-{plugin}"]

=== MongoDB-Guardium filter plugin

include::{include_path}/plugin_header.asciidoc[]

==== Description

This is a Logstash filter plugin for Guardium Universal connector, a feature in IBM Security Guardium. It parses a MongoDB audit log events/messages into a Guardium Record instance – a standard structure made out of several parts – before it is sent over to Guardium. Guardium Record parts, in brief, are Accessor (who tried to access the data), Session, Data or Exception. If there was no error, the Data contains details about the query "Construct", which details the main action (verb) and collections (objects) involved.

The filter relies on authCheck and authenticate audit log messages.

// Format anchors and links to support generated ids for versioning
// Sample anchor: [id="plugins-{type}s-{plugin}-setting_name"]
// Sample link: <<plugins-{type}s-{plugin}-setting_name>>

[id="plugins-{type}s-{plugin}-options"]
==== Configuration Options

None 

// [cols="<,<,<",options="header",]
// |=======================================================================
//|Setting |Input type|Required
//| <<plugins-{type}s-{plugin}-a_setting_name>> |<<boolean,boolean>>|No
//| <<plugins-{type}s-{plugin}-another_setting_name>> |<<hash,hash>>|No
//| <<plugins-{type}s-{plugin}-setting_name_3>> |<<string,string>>|No
//| <<plugins-{type}s-{plugin}-setting_name_4>> |<<number,number>>|No
// | <<plugins-{type}s-{plugin}-setting_name_5>> |<<array,array>>|No
// |=======================================================================

// [id="plugins-{type}s-{plugin}-a_setting_name"]
// ===== `a_setting_name` 

//   * Value type is <<boolean,boolean>>
//   * Default value is `true`

// Add description here

// [id="plugins-{type}s-{plugin}-another_setting_name"]
// ===== `another_setting_name` 

//   * Value type is <<hash,hash>>
//   * Default value is `{}`

// Add description here

// The full list of Value Types is here: 
// https://www.elastic.co/guide/en/logstash/current/configuration-file-structure.html

[id="plugins-{type}s-{plugin}-common-options"]
include::{include_path}/{type}.asciidoc[]
