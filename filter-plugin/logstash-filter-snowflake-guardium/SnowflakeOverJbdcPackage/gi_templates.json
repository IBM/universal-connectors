{
  "plugin_name": "Snowflake over JDBC",
  "help_link": "https://github.com/infoinsights/guardium-snowflake-uc-filter/blob/main/README.md",
  "input_name": "JDBC_input",
  "input_parameters": [
    {
      "jdbc_connection_string": {
        "type": "text",
        "label": "jdbc_connection_string"
      },
      "jdbc_validate_connection": {
        "type": "boolean",
        "default": true,
        "hidden": true
      },
      "jdbc_driver_class": {
        "type": "text",
        "default": "Java::net.snowflake.client.jdbc.SnowflakeDriver",
        "hidden": true
      },
      "jdbc_driver_library": {
        "type": "text",
        "default": "/usr/share/logstash/logstash-core/lib/jars/snowflake-jdbc.jar",
        "hidden": true
      },
      "record_last_run": {
        "type": "boolean",
        "default": true,
        "hidden": true
      },
      "schedule": {
        "type": "text",
        "default": "* * * * *",
        "hidden": true
      },
      "use_column_value": {
        "type": "boolean",
        "default": true,
        "hidden": true
      },
      "tracking_column": {
        "type": "text",
        "default": "query_timestamp_epoch",
        "hidden": true
      },
      "plugin_timezone": {
        "type": "text",
        "default": "local",
        "hidden": true
      },
      "enrollmentId": {
        "type": "text",
        "default": "NA",
        "hidden": true
      },
      "account_id": {
        "type": "text",
        "default": "NA",
        "hidden": true
      },
      "server_name": {
        "type": "text",
        "default": "NA",
        "hidden": true
      },
      "event_type": {
        "type": "text",
        "label": "event type (login_success/login_failed)",
        "default": "login_success"
      },
      "tracking_column_type": {
        "type": "text",
        "default": "numeric",
        "hidden": true
      },
      "server_host_name": {
        "type": "text",
        "label": "Server hostname (<id>.<region>.<provider>.snowflakecomputing.com)"
      },
      "statement_select": {
        "type": "text",
        "default": "QH.DATABASE_NAME as DATABASE_NAME,QH.SESSION_ID as SESSION_ID,\\r\\n                TO_TIMESTAMP_LTZ(QH.END_TIME) as QUERY_TIMESTAMP,\\r\\n                LH.CLIENT_IP as CLIENT_IP, CURRENT_IP_ADDRESS() as SERVER_IP,\\r\\n                QH.USER_NAME as USER_NAME, S.CLIENT_ENVIRONMENT,\\r\\n                QH.QUERY_ID, QH.QUERY_TEXT, QH.QUERY_TYPE, QH.QUERY_TAG ,\\r\\n                QH.ROLE_NAME, S.CLIENT_APPLICATION_ID, QH.WAREHOUSE_NAME,\\r\\n                QH.ERROR_CODE AS QUERY_ERROR_CODE, QH.ERROR_MESSAGE AS QUERY_ERROR_MESSAGE,\\r\\n                QH.EXECUTION_STATUS AS QUERY_EXECUTION_STATUS,\\r\\n                DATE_PART(epoch_millisecond, QH.END_TIME) AS QUERY_TIMESTAMP_EPOCH",
        "label": "SELECT"
      },
      "statement_from": {
        "type": "text",
        "default": " SNOWFLAKE.ACCOUNT_USAGE.QUERY_HISTORY QH\\r\\n            LEFT JOIN SNOWFLAKE.ACCOUNT_USAGE.SESSIONS S\\r\\n                ON S.SESSION_ID = QH.SESSION_ID\\r\\n            LEFT JOIN SNOWFLAKE.ACCOUNT_USAGE.LOGIN_HISTORY LH\\r\\n                ON S.LOGIN_EVENT_ID = LH.EVENT_ID",
        "label": "FROM"
      },
      "statement_where": {
        "type": "text",
        "default": "(QH.EXECUTION_STATUS <> :execution_status)\\r\\n                AND DATE_PART(epoch_millisecond, QH.END_TIME) > :sql_last_value\\r\\n            ORDER BY QH.END_TIME",
        "label": "WHERE"
      },
      "type": {
        "type": "text",
        "default": "Snowflake",
        "hidden": true
      }
    }
  ],
  "credentials": [
    {
      "jdbc_password": {
        "type": "password",
        "label": "password"

      }
    }
  ],
  "third_parties" : ["snowflake-jdbc.jar"],
  "filter_name": "Guardium_Snowflake_filter",
  "filter_parameters": [],
  "auth_parameters": [
    {
      "guc_input_param_jdbc_user": {
        "type": "text",
        "label": "jdbc_user"
      }
    }
  ],
  "supported_platforms": ["Microsoft Azure","Amazon Web Services", "Google Cloud Platform"]
}