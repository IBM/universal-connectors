#
# Copyright 2021-2023 IBM Inc. All rights reserved
# SPDX-License-Identifier: Apache2.0
#

filter {
    if [type] == "snowflake" {
        if ([skip_logging_audit_query] == "true" or [skip_logging_auth_audit_query] == "true") and [query_text] {
            mutate {
                add_field => {
                    temp_query => "%{query_text}"
                }
            }

            mutate {
                gsub => ["temp_query","\\n","",
                    "temp_query", "\s{2,}", " ",
                    "temp_query", "\\t", " "]
            }

            if [temp_query] =~ /(\s*)SELECT(\s+)QH\.DATABASE_NAME(\s+)as(\s+)DATABASE_NAME,QH\.SESSION_ID(\s+)as(\s+)SESSION_ID,(\s+)TO_TIMESTAMP_LTZ\(QH\.END_TIME\)(\s+)as(\s+)QUERY_TIMESTAMP,(\s+)LH\.CLIENT_IP(\s+)as(\s+)CLIENT_IP,(\s+)CURRENT_IP_ADDRESS\(\)(\s+)as(\s+)SERVER_IP,(\s+)QH\.USER_NAME(\s+)as(\s+)USER_NAME,(\s+)S\.CLIENT_ENVIRONMENT,(\s+)QH\.QUERY_ID,(\s+)QH\.QUERY_TEXT,(\s+)QH\.QUERY_TYPE,(\s+)QH\.QUERY_TAG(\s+),(\s+)QH\.ROLE_NAME,(\s+)S\.CLIENT_APPLICATION_ID,(\s+)QH\.WAREHOUSE_NAME,(\s+)QH\.ERROR_CODE(\s+)AS(\s+)QUERY_ERROR_CODE,(\s+)QH\.ERROR_MESSAGE(\s+)AS(\s+)QUERY_ERROR_MESSAGE,(\s+)QH\.EXECUTION_STATUS(\s+)AS(\s+)QUERY_EXECUTION_STATUS,(\s+)DATE_PART\(epoch_millisecond,(\s+)QH\.END_TIME\)(\s+)AS(\s+)QUERY_TIMESTAMP_EPOCH(\s+)FROM(\s+)SNOWFLAKE\.ACCOUNT_USAGE\.QUERY_HISTORY(\s+)QH(\s+)LEFT(\s+)JOIN(\s+)SNOWFLAKE\.ACCOUNT_USAGE\.SESSIONS(\s+)S(\s+)ON(\s+)S\.SESSION_ID(\s+)=(\s+)QH\.SESSION_ID(\s+)LEFT(\s+)JOIN(\s+)SNOWFLAKE\.ACCOUNT_USAGE\.LOGIN_HISTORY(\s+)LH(\s+)ON(\s+)S\.LOGIN_EVENT_ID(\s+)=(\s+)LH\.EVENT_ID(\s+)WHERE(\s+)\(QH\.EXECUTION_STATUS(\s+)<>(\s+)\'RUNNING\'\)(\s+)AND(\s+)DATE_PART\(epoch_millisecond,(\s+)QH\.END_TIME\)(\s+)>(\s+)[0-9]+(\s+)ORDER(\s+)BY(\s+)QH\.END_TIME/ {
                drop {}
            }

            if [temp_query] =~ /FROM\s+SNOWFLAKE\.ACCOUNT_USAGE\.LOGIN_HISTORY\s+LH\s+WHERE\s+LH.IS_SUCCESS\s+LIKE\s+'%NO%'\s+AND\s+DATE_PART\(epoch_millisecond,\s+LH\.EVENT_TIMESTAMP\)\s+>\s+[0-9]+\s+ORDER\s+BY\s+LH\.EVENT_TIMESTAMP/ {
                drop {}
            }
        }

        if [event_type] == "login_success" {
            if [query_execution_status] =~ "FAIL" {
                mutate {
                    replace => { "event_type" => "SQL_ERROR" }
                }
            } else {
                mutate {
                    replace => { "event_type" => "SUCCESS" }
                }
            }
        }
        guardium_snowflake_filter { }
        prune {
            whitelist_names => ["GuardRecord"]
        }
    }
}