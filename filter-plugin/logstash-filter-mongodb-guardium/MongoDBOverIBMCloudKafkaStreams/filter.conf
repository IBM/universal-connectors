filter {
if [type] == "icd_mongodb"{

 if "databases-for-mongodb" not in [message] or "atype" not in [message] {
    drop{}
   }

   if "__system" in [message] or '"c":"CONTROL"' in [message] {
     drop{}
   }

 json {
        source => "message"
        target => "parsed_json"
    }

    if [parsed_json][data] {

      mutate {
                add_field => {
                    "new_event" => "%{[parsed_json][data][message]}"
                }

            add_field => {
                "logSourceCRN" => "%{[parsed_json][data][message][logSourceCRN]}"
            }

          replace => {
            "data" => "%{[parsed_json][data][message][message]}"
          }
        }
    } else {

        grok
             {
             match => {"message" => "(?<otherdetail>[a-zA-Z.0-9:\-\s]*)(?:%{GREEDYDATA:data})"}
             }

    }

    # Define isCRNMatched
        mutate {
            add_field => { "isCRNMatched" => "false" }
        }


        # Check if crnVal is defined
        if [crnVal] {
        # Ensure crn_vals is an array
            ruby {
                code => '

                    isMatched = false
                    crn_vals = event.get("crnVal")
                    log_crn = event.get("logSourceCRN")


                    # If crn_vals is a string, convert it into an array
                    crn_vals = [crn_vals] unless crn_vals.is_a?(Array)

                    crn_vals.each { |val|
                         if val == log_crn
                            isMatched = true
                            end
                        }

                    event.set("isCRNMatched", isMatched.to_s)
              '
            }
        }

        grok
        {
         match => {"logSourceCRN" => "(?<otherdetails>[^/]*)/(?<accountId>[^:]*):(?<instanceId>[^/s]*)::"}
        }

        mutate { add_field => { "server_hostname" => "%{accountId}-%{instanceId}.ibm.com" } }
        mutate { add_field => { "dbname_prefix" => "%{accountId}:%{instanceId}" } }
        mutate { add_field => { "source_program" => "mongod" } }
        mutate { replace => { "message" => "%{otherdetail} %{source_program}: %{data}" } }

        if [isCRNMatched] == "true" or ![crnVal] {
            if [message] {
            mongodb_guardium_filter {}
            }
        }

    if "_mongoguardium_json_parse_error" not in [tags] {
      mutate { remove_field => ["data","otherdetail","source_program","host","otherdetails"] }
              }
           }
}