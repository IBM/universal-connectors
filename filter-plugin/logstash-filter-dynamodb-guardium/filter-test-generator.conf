input {
	generator { 
	  type => "Dynamodb"
	  lines =>
	  ['{
        	"eventVersion": "1.08",
        	"userIdentity": {
        		"type": "IAMUser",
        		"principalId": "*****",
        		"arn": "*****",
        		"accountId": "346824953529",
        		"accessKeyId": "*******",
        		"userName": "*****",
        		"sessionContext": {
        			"sessionIssuer": {},
        			"webIdFederationData": {},
        			"attributes": {
        				"creationDate": "2023-07-03T07:39:39Z",
        				"mfaAuthenticated": "true"
        			}
        		}
        	},
        	"eventTime": "2023-07-03T07:44:56Z",
        	"eventSource": "iam.amazonaws.com",
        	"eventName": "PutUserPolicy",
        	"awsRegion": "us-east-1",
        	"sourceIPAddress": "84.229.140.131",
        	"userAgent": "AWS Internal",
        	"requestParameters": {
        		"policyDocument": "{\n\t\"Version\": \"2012-10-17\",\n\t\"Statement\": [\n\t\t{\n    \"Sid\": \"RestrictDynamoPutAccess\",\n    \"Effect\": \"Deny\",\n    \"Action\": [\n        \"dynamodb:Update*\",\n        \"dynamodb:PutItem\",\n        \"dynamodb:Delete*\"\n    ],\n    \"Resource\": \"arn:aws:dynamodb:*:346824953529:table/*\"\n\t\t}\n\t]\n}\n",
        		"policyName": "DynmodDB_Custom_deny_Policy2",
        		"userName": "uc-no-dynamodb-access"
        	},
        	"responseElements": null,
        	"requestID": "c19d370e-4bee-4682-a11c-506093c9683a",
        	"eventID": "a756c942-b22b-4c72-b7e7-2cce64c87ef7",
        	"readOnly": false,
        	"eventType": "AwsApiCall",
        	"managementEvent": true,
        	"recipientAccountId": "346824953529",
        	"eventCategory": "Management",
        	"sessionCredentialFromConsole": "true"
        }']
	  count => 1
	  add_field => {"account_id" => "<ACCOUNT_ID>"}
	}
}

filter {
	if [type] == "Dynamodb" {
		json {
			source => "message"
			target => "parsed_json"
		}
		mutate {
			add_field => {
				"new_event_source" => "%{[parsed_json][eventSource]}"
			}
		}
		if [new_event_source] {
			if[new_event_source] =~ "dynamodb.amazonaws.com" {
				dynamodb_guardium_plugin_filter {}
			}
			else {
				drop {}
			}
		}
		
		mutate { remove_field => [ "parsed_json", "new_event_source", "message", "cloudwatch_logs", "@timestamp", "@version", "type", "host", "sequence" ] }
	}
}

output {
	stdout { codec => rubydebug } 
}
