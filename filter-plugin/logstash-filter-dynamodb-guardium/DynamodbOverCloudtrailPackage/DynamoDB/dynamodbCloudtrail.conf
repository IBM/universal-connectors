#
# Copyright 2022-2023 IBM Inc. All rights reserved
# SPDX-License-Identifier: Apache2.0
#


input {
  s3 {
	  access_key_id => "<Enter the access key id>"
	  secret_access_key => "<Enter the secret access key id>"
	  region => "<Enter AWS region value>" #Region that has the DB, Default value: us-east-1
    bucket => "<Enter the S3 bucket name>" #This is Bucket cnfigured while creating CloudTrail
    interval => 5
	  type => 'CloudTrail'
    codec => cloudtrail {}
	  add_field => {"account_id" => "<Enter the aws account id>"}
	  #Prefix is an optional parameter to speed up the data fetching from S3. If all the tables related to the cloudTrail are in the same Region, then add the value as  prefix => "AWSLogs/399998888666/CloudTrail/ap-south-1/" The value can be confirmed on S3 buckets page in AWS.
	  prefix => "<Enter the prefix of filenames in the bucket>"  # for e.g., "AWSLogs/<Account_ID>/<Tables_Region>/"
  }
}

filter {
	if [type] == 'CloudTrail' { 
		if [eventTime] {
			mutate {add_field => {"[message][eventTime]" => "%{eventTime}"}}
		}
		else {
			ruby {
				code => 'event.set("eventTime", event.get("@timestamp"))'
			}
			mutate { 
				convert => { "eventTime" => "string" } 
				add_field => {"[message][eventTime]" => "%{eventTime}"}
			}
		}
	
		if [eventName] {
			mutate {add_field => {"[message][eventName]" => "%{eventName}"}}
		}
	
		if [sourceIPAddress] {
			mutate {add_field => {"[message][sourceIPAddress]" => "%{sourceIPAddress}"}}
		}
	
		if [userAgent] {
			mutate {add_field => {"[message][userAgent]" => "%{userAgent}"}}
		}
	
		if [requestID] {
			mutate {add_field => {"[message][requestID]" => "%{requestID}"}}
		}
	
		if [userIdentity] {
			mutate {add_field => {"[message][userIdentity]" => "%{userIdentity}"}}
		}
	
		if [requestParameters] {
			mutate {add_field => {"[message][requestParameters]" => "%{requestParameters}"}}
		}

		if [errorMessage] {
        	mutate {add_field => {"[message][errorMessage]" => "%{errorMessage}"}}
        }

        if [errorCode] {
            mutate {add_field => {"[message][errorCode]" => "%{errorCode}"}}
        }
	
		if [eventSource] {
			if[eventSource] =~ "dynamodb.amazonaws.com" {
				mutate {add_field => {"[message][eventSource]" => "%{eventSource}"}}
			}
			else {
				drop {}
			}
		}
	
		ruby { code => 'event.set("message", event.get("message").to_s)' }
	
		dynamodb_guardium_plugin_filter {}
	
		prune { whitelist_names => [ "GuardRecord" ] }
	}
}
