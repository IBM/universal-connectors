input {
  s3_sqs {
    queue_url => "<queue_url>" # For i.e https://sqs.<region>.amazonaws.com/<account_id>/<queue_name>
    region => "<region>"
    access_key_id => "<access_key_id>"
    secret_access_key => "<secret_access_key>"
    role_arn => "<role_arn>" # Leave empty if not using role-based access
    max_messages => <max_messages>
    wait_time => <wait_time> # Must be >= 0 and <= 20,
    polling_frequency => <polling_frequency>
    type => "<type>"
  }
}


filter {
  if [type] == 'S3SQS' and [message] {

    json {
      source => "message"
      target => "parsed_message"
    }

    # Drop event if parsed_message does not contain "Records"
    if ![parsed_message][Records] {
      drop {}
    }

    ruby {
      code => '
        parsed_message = event.get("parsed_message")
        if parsed_message && parsed_message["Records"].is_a?(Array)
          parsed_message["Records"].each do |record|
            record["type"] = event.get("type")
            record["timestamp"] = event.get("timestamp") || Time.now.to_i
            record["fileKey"] = event.get("fileKey") || "unknown"
            record["@version"] = event.get("@version")
            record["@timestamp"] = event.get("@timestamp")
          end
          event.set("message", parsed_message["Records"].to_json)
        else
          event.tag("json_parse_error")
        end
      '
    }

    dynamodb_guardium_plugin_filter {}

    prune { whitelist_names => [ "GuardRecord" ] }
  }
}
