//
// Copyright 2021 - IBM Inc. All rights reserved
// SPDX-License-Identifier: Apache2.0
//

input{
	cloudwatch_logs {
		#Mandatory arguments:
		#Insert the log group that is created for the data instance for example, /aws/rds/instance/<instance_name>/postgresql
		log_group => ["<LOG-GROUP>"]  #e.g., ["aws-auroramysql-logs"]
		#Insert the access key and secret that has access to log group
		access_key_id => "<ACCESS-KEY>"
		secret_access_key => "<SECRET-KEY>"
		region => "<REGION>" #Region that has the DB, Default value: us-east-1
		start_position => "end"
		interval => 5
		event_filter => ""
		type => "AuroraMysql"
		add_field => {"account_id" => "<account_id>"}
	}
}

filter {

	if [type]=="AuroraMysql"
	{

		if[mes***REMOVED***ge] =~ "performance_schema" or [mes***REMOVED***ge] =~ "DISCONNECT" or [mes***REMOVED***ge] =~ "current_user" or [mes***REMOVED***ge] =~ "CONNECTION_ID" or [mes***REMOVED***ge] =~ "SELECT @@session.tx_read_only" {
				drop {}
			}
			else {
				 grok { match => { "mes***REMOVED***ge" => "(?<ts>[^,]*),(?<serverInstance>[^,]*),(?<userName>[^,]*),(?<clientIp>[^,]*),(?<connectionId>[^,]*),(?<queryId>[^,]*),(?<operation>[^,]*),(?<dbName>[^[,]]*),(?<originalSQL>[^[?]]*),%{NUMBER:retcode}" } }


				mutate { gsub => ["originalSQL","[\\]",""]}
				mutate { add_field => {"Server_Hostname" => "%{account_id}_%{serverInstance}"} }
				mutate {replace => { "serverInstance" => "%{account_id}:%{serverInstance}" }}

				auroramysqlguardiumpluginfilter{}
			}


		mutate {
			remove_field => [ "@version","operation","type","userName","dbName","NUMBER","serverInstance","clientIp","connectionId","queryId","cloudwatch_logs","@timestamp","retcode","account_id","mes***REMOVED***ge","originalSQL","Server_Hostname" ]
			}
	}
}