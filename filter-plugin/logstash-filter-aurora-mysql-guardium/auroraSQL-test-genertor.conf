input{
    generator {
            lines => [
            "1679569000492494,ds-aurora-mysql-instance-1,admin,43.250.158.57,9,3208,QUERY,testdb,'/* ApplicationName=DBeaver 22.3.4 - Main */ SELECT 1',0",
            "1679569000492494,ds-aurora-mysql-instance-1,admin,localhost,9,3208,QUERY,testdb,'/* ApplicationName=DBeaver 22.3.4 - Main */ SELECT DATABASE()',0",
            "1679569000492494,ds-aurora-mysql-instance-1,admin,2600:1y16:6b0:1001:f292:6f25:a643:6588,9,3208,QUERY,testdb,'/* ApplicationName=DBeaver 22.3.4 - Main */ SELECT @@session.tx_isolation',0",
            "1679569000492494,ds-aurora-mysql-instance-1,admin,2600:1y16:6b0:1001:f292:6f25:a643:6588,9,3208,QUERY,testdb,0"
            ]
            type => "cloudwatch"
            tags => ["aurorMySQL"]
           count => 1
           add_field => {"account_id" => "34682495****"}
    }
  }


filter
    {
        if [type] == "cloudwatch" {
            grok {
                match => {
                    "message" => "(?<ts>[^,]*),(?<serverInstance>[^,]*),(?<userName>[^,]*),(?<clientIp>[^,]*),(?<connectionId>[^,]*),(?<queryId>[^,]*),(?<operation>[^,]*),(?<dbName>[^,]*),(?<originalSQL>[^?]*),%{NUMBER:retcode}"
                }
            }

            if ![dbName] and [message] !~ "FAILED_CONNECT"  {
                drop {}
            } else {
                mutate {
                    gsub => ["originalSQL", "[\\]",""]
                    add_field => {
                        "Server_Hostname" => "%{account_id}_%{serverInstance}"
                    }
                    replace => {
                        "serverInstance" => "%{account_id}:%{serverInstance}"
                    }
                }
                auroramysqlguardiumpluginfilter {}
            }

            mutate {
                remove_field =>
                [
                    "@version","operation","type", "userName", "dbName", "NUMBER","serverInstance","clientIp", "connectionId","queryId","cloudwatch_logs", "@timestamp","retcode","account_id","message","originalSQL","Server_Hostname","sequence","ts","tags","host"
                ]
            }
        }

    }


output {
	stdout { codec => rubydebug }

}