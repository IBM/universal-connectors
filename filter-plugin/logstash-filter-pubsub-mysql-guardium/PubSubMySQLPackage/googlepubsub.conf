input {
   google_pubsub {
        # Your GCP project id (name)
       project_id => "<PROJECT_ID>"

        # The topic name below is currently hard-coded in the plugin. You
        # must first create this topic by hand and ensure you are exporting
        # logging to this pubsub topic.
       topic => "<TOPIC_NAME>"

        # The subscription name is customizeable. The plugin will attempt to
        # create the subscription (but use the hard-coded topic name above).
       subscription => "<SUB_NAME>"

        # If you are running logstash within GCE, it will use
        # Application Default Credentials and use GCE's metadata
        # service to fetch tokens.  However, if you are running logstash
        # outside of GCE, you will need to specify the service account's
        # JSON key file below.
       json_key_file => "${THIRD_PARTY_PATH}/<KEY_FILE_NAME>.json"
       # Type should be populated with a unique ID per connector to provide data source isolation
       # <TYPE_ID> can be any string, preferably a meaningful one
       type => "<TYPE_ID>"
}
}

filter {
    # If you wish to use Cloud SQL proxy, turn on the cloudsqlproxy_enabled config variable
    # pubsub-mysql-guardium{ cloudsqlproxy_enabled => true }
    # defaults to false unless explicitly used in the filter's scope
    if [type] == "<TYPE_ID>" {
        	pubsub-mysql-guardium{ }
    }
  }