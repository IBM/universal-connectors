input {
	beats {
        port => "5244"
		include_codec_tag => false
		type => "filebeat"
	}
} 

filter {
	
	if [type] == "filebeat" and "Neo4j" in [tags] {
		grok { match => { "mes***REMOVED***ge" => "(?<ts>[^[A-Z]]*) %{LOGLEVEL:log_level}\s(?<metadata1>[^\\\t]*)\t(?<protocol>[^ \s]*)\s(?<driverVersion>[^ \t]*)\t\t(?<client_ip>[^ \t]*)\t(?<server_ip>[^ >]*)\>\t(?<dbname>[^-]*)\-\s(?<dbuser>[^-]*)\- %{GREEDYDATA:queryStatement}" } }
		
		neodb_guardium_filter{}


		mutate { remove_field => ["metadata1", "client_ip", "ts","log_level", "queryStatement", "dbuser", "server_ip", "driverVersion", "protocol", "@timestamp", "@version", "mes***REMOVED***ge", "sequence", "dbname", "ecs", "log", "agent", "host", "os", "mac"] }
    }
}

output {
	if [GuardRecord] {
		stdout { codec => rubydebug }
		# in production, Guardium Univer***REMOVED***l connector output plugin processes the filter output 
	}
}