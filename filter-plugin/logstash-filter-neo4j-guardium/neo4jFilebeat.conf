input {
	beats {
        	port => <PORT_NUMBER>
		include_codec_tag => false
		type => "filebeat"
	}
} 

filter {
	
	if [type] == "filebeat" and "Neo4j" in [tags] {
		grok {
         match => { "message" => "(%{TIMESTAMP_ISO8601:ts})\s+%{LOGLEVEL:log_level}\s+(?<metadata1>[^\\\t]*)[\t\s]+(?<protocol>[^\s]*)\s+(?<driverVersion>[^ \t]*)\t*(?<client_ip>[^ \t]*)\t*(?<server_ip>[^ >]*)\>?\t*(?<dbname>[^\s+]*)\s+\-\s+(%{USERNAME:dbuser})?\s+\-\s+%{GREEDYDATA:queryStatement}" }
		 }
		
		if[queryStatement] =~ "type: \'system\'" or [queryStatement] =~ "runtime=system" or [dbname] =~ "system"
                {
                        drop {}
                }


		mutate {
			add_field => { "serverHostName" => "%{[host][hostname]}" }
		}
		neodb_guardium_filter{}

		mutate { remove_field => ["metadata1", "client_ip", "ts","log_level", "queryStatement", "dbuser", "server_ip", "driverVersion", "protocol", "@timestamp", "@version", "message", "sequence", "dbname", "ecs", "log", "agent", "host", "os", "mac"] }
    }
}

output {
	if [GuardRecord] {
		stdout { codec => rubydebug }
		# in production, Guardium Universal connector output plugin processes the filter output 
	}
}