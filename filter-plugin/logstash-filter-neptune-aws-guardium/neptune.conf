input{
    cloudwatch_logs {
	  #Mandatory arguments:
	  #Insert the log group that is created for the data instance for example, /aws/neptune/<cluster_name>/audit
	  log_group => ["<LOG_GROUP>"]  #Example: ["/aws/neptune/database-1/audit"]
	  region => "<REGION>"  #Region that has the DB, Default value: us-east-1
	  codec => plain
	  sincedb_path => "NUL"
	  #Insert the access key and secret that has access to log group
	  access_key_id => "<ACCESS_KEY>"
	  secret_access_key => "<SECRET_ACCESS_KEY>"
	  type => "neptune"
	  event_filter => ''
	  start_position => "end"
	  #Insert the account id of the AWS account
	  add_field => {"account_id" => "<ACCOUNT_ID>" }
        }
    }

filter{
    if [type] == "neptune" {

	    mutate{
		    add_field => { "serverHostnamePrefix" => "%{[account_id]}_%{[cloudwatch_logs][log_stream]}" }
		    add_field => { "dbnamePrefix" => "%{[account_id]}:%{[cloudwatch_logs][log_stream]}" }
		  }

        grok{
            match => {"message" => [

           "(?<timestamp>[\d]{13}), (?<clienthost>[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}:[\d]{4,5}), (?<serverhost>[a-z0-9\.-]*/?[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}:[\d]{4,5}), %{WORD:connectiontype}, (?<callerIAM>[^\s]*), (?<authcontext>[^\s]*), \"(?<httpheaders>.*?)\", \"%{GREEDYDATA:payload}\"",

           "(?<timestamp>[\d]{13}), (?<clienthost>[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}:[\d]{4,5}), (?<serverhost>[a-z0-9\.-]*/?[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}:[\d]{4,5}), %{WORD:connectiontype}, (?<callerIAM>[^\s]*), (?<authcontext>[^\s]*), \"(?<httpheaders>.*?)\", %{GREEDYDATA:payload}",

            "(?<timestamp>[\d]{13}), (?<clienthost>[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}:[\d]{4,5}), (?<serverhost>[a-z0-9\.-]*/?[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}:[\d]{4,5}), %{WORD:connectiontype}, (?<callerIAM>[^\s]*), (?<authcontext>[^\s]*), (?<httpheaders>.*?), %{GREEDYDATA:payload}",

           "(?<timestamp>[\d]{13}), (?<clienthost>[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}:[\d]{4,5}), (?<serverhost>[a-z0-9\.-]*/?[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}:[\d]{4,5}), %{WORD:connectiontype}, (?<callerIAM>[^\s]*), (?<authcontext>[^\s]*), (?<httpheaders>.*?), \"%{GREEDYDATA:payload}\""
        ] } }

        if "/status" in [message] or "/gremlin/profile" in [message] or "/gremlin/explain" in [message] or [payload] == "/gremlin" or "explain=dynamic" in [payload]
			{
			drop{}
			}

		mutate {
                          gsub => ["payload","\\\"",""]
                }

               if "_grokparsefailure"  in [tags]
                {
                   drop{}
               }
       neptune_guardium_filter{}
           prune {
                              whitelist_names => [ "GuardRecord"]
                  }
       }

    }