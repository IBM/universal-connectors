input {
  generator {
    lines => [
        "1716474830737, 172.31.25.45:43952, 10.231.2.175:8182, Websocket, arn:aws:sts::123456789:assumed-role/BURoleForNeptuneNotebook/SageMaker, {authenticationSucceeded=true}, [unknown], \"RequestMessage{, requestId=df3db8b3-1e8f-4345-9276-e0aab04e75ae, op='eval', processor='', args={gremlin=g.addV('node_test_label').property(id,'test_id_abc').property('my_property','first_node') , aliases={g=g}}}\"",

		 "1716474833843, 10.211.5.133:43956, 172.31.48.65:8182, Websocket, arn:aws:sts::123456789:assumed-role/BURoleForNeptuneNotebook/SageMaker, {authenticationSucceeded=true}, [unknown], \"RequestMessage{, requestId=e3ec8500-e367-4650-be77-6be2a7c93dd9, op='eval', processor='', args={gremlin=g.V('test_id_abc') , aliases={g=g}}}\"",

		 "1716474836828, 10.231.2.143:43957, 172.20.48.65:8182, Websocket, arn:aws:sts::123456789:assumed-role/BURoleForNeptuneNotebook/SageMaker, {authenticationSucceeded=true}, [unknown], \"RequestMessage{, requestId=313bd190-3b18-4ad3-8811-ae2cc0b2ab0b, op='eval', processor='', args={gremlin=g.V('test_id_abc').drop() , aliases={g=g}}}\"",

		"1666017617386, 172.31.25.45:43952, 172.31.48.65:8182, Websocket, [unknown], [unknown], [unknown], \"RequestMessage{, requestId=e51a7803-82e8-4f56-8ab1-8730ce4f24aa, op='eval', processor='', args={gremlin= g.V().hasLabel('person') , aliases={g=g}}}\""
        ]
    count => 1
    add_field => {"account_id" => "123456789" }
    type => "neptune"
  }
}

filter{
    if [type] == "neptune" {

	    mutate{
		    add_field => { "serverHostnamePrefix" => "%{[account_id]}_%{[cloudwatch_logs][log_stream]}" }
		    add_field => { "dbnamePrefix" => "%{[account_id]}:%{[cloudwatch_logs][log_stream]}" }
		  }

        grok{
            match => {"message" => [

           "(?<timestamp>[\d]{13}), (?<clienthost>[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}:[\d]{4,5}), (?<serverhost>[a-z0-9\.-]*/?[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}:[\d]{4,5}), %{WORD:connectiontype}, (?<callerIAM>[^\s]*), (?<authcontext>[^\s]*), \"(?<httpheaders>.*?)\", \"%{GREEDYDATA:payload}\"",

           "(?<timestamp>[\d]{13}), (?<clienthost>[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}:[\d]{4,5}), (?<serverhost>[a-z0-9\.-]*/?[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}:[\d]{4,5}), %{WORD:connectiontype}, (?<callerIAM>[^\s]*), (?<authcontext>[^\s]*), \"(?<httpheaders>.*?)\", %{GREEDYDATA:payload}",

            "(?<timestamp>[\d]{13}), (?<clienthost>[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}:[\d]{4,5}), (?<serverhost>[a-z0-9\.-]*/?[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}:[\d]{4,5}), %{WORD:connectiontype}, (?<callerIAM>[^\s]*), (?<authcontext>[^\s]*), (?<httpheaders>.*?), %{GREEDYDATA:payload}",

           "(?<timestamp>[\d]{13}), (?<clienthost>[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}:[\d]{4,5}), (?<serverhost>[a-z0-9\.-]*/?[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}:[\d]{4,5}), %{WORD:connectiontype}, (?<callerIAM>[^\s]*), (?<authcontext>[^\s]*), (?<httpheaders>.*?), \"%{GREEDYDATA:payload}\""
        ] } }

        if "/status" in [message] or "/gremlin/profile" in [message] or "/gremlin/explain" in [message] or [payload] == "/gremlin" or "explain=dynamic" in [payload]
			{
			drop{}
			}

		mutate {
                          gsub => ["payload","\\\"",""]
                }

               if "_grokparsefailure"  in [tags]
                {
                   drop{}
               }
       neptune_guardium_filter{}
           prune {
                              whitelist_names => [ "GuardRecord"]
                  }
       }

    }
    output
    {
    	stdout { codec => rubydebug }
    }