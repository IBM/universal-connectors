input {
  tcp { port => 5000 type => syslog dns_reverse_lookup_enabled => false }
  udp { port => 5141 type => syslog }
  beats { port => 5044 type => filebeat }
}

filter {

 if [type] == "syslog" {
    grok {
        match => { "mes***REMOVED***ge" => "%{SYSLOGTIMESTAMP:syslog_timestamp} %{SYSLOGHOST:server_hostname} %{SYSLOGPROG:source_program}(?:\[%{POSINT:syslog_pid}\])?: %{GREEDYDATA:mysql_mes***REMOVED***ge}" }

    }
    date {
      match => [ "timestamp", "MMM  d HH:mm:ss", "MMM dd HH:mm:ss" ]
    }
    mutate { rename => { "host" => "server_ip" } }
    mysql_filter_guardium{}
  }

  if "_mysqlguardium_parse_error" not in [tags] {
    mutate { remove_field => ["mes***REMOVED***ge","syslog_timestamp","program","syslog_pid","mysql_mes***REMOVED***ge","server_hostname","client_hostname","host","log"] }
  }

}
output {
  if ("_mysqlguardium_parse_error" not in [tags])
      and ("_mysqlguardium_ignore" not in [tags]) { # but let json parse error pass, for logging
    java_output_to_guardium {}
  }

  if "metric" in [tags] {
    file {
      codec => line { format => "rate: %{[events][rate_1m]}" }
      path => "/tmp/logstash_plugin/log/events_per_sec-%{+YYYY-MM-dd}.log"
    }
  }
}
