input{
generator {
type => "redS"
mes***REMOVED***ge =>
 "authentication failure |Mon, 16 Mar 2022 08:18:14:766|::ffff:223.233.72.13 |1224 |1073742045|dev |meenakshi |password |0|TLSv1.2 |ECDHE-RSA-AES256-GCM-SHA384 |0| | | | |Windows 10 10.0 amd64 |Amazon Redshift JDBC Driver 1.2.55.1083 |none |0|da9edc00-a1e6-44e0-8274-9417e5f355de"
count => 1
}
}
filter {
if [type] == "redS" {
mutate 
{
replace => { "serverHostnamePrefix" => "<account_id>-<cluster_name>" }
replace => { "dbprefix" => "<account_id>:<cluster_name>" }
}
grok {
match => {"mes***REMOVED***ge" => ["(?<action>[^:]*) \|%{DAY:day}\, %{MONTHDAY:md} %{MONTH:month} %{YEAR:year} %{TIME:time}\|(?<remotehost>[^\s]*) \|(?<remoteport>[^\s]*) \|(?<pid>[^\s]*)\|(?<dbname>[^\s]*) \|(?<username>[^\s]*) \|(?<authmethod>[^:]*) \|%{NUMBER:duration}\|(?<sslversion>[^\s]*) \|(?<sslcipher>[^:]*) \|(?<mtu>[^\s]*)\|%{SPACE:sslcompression}\|%{SPACE:sslexpansion}\|%{SPACE:iamauthguid}\|(?<application_name>[^:]*) \|(?<os_version>[^:]*) \|(?<driver_version>[^:]*) \|(?<plugin_name>[^:]*) \|(?<protocol_version>[^:]*)\|(?<id>[^:]*)",
"(?<action>[^:]*) \|%{DAY:day}\, %{MONTHDAY:md} %{MONTH:month} %{YEAR:year} %{TIME:time}\|(?<remotehost>[^\s]*) \|(?<remoteport>[^\s]*) \|(?<pid>[^\s]*)\|(?<dbname>[^\s]*) \|(?<username>[^\s]*) \|(?<authmethod>[^:]*) \|(?<duration>[^\s]*)\|(?<sslversion>[^\s]*) \|(?<sslcipher>[^\s]*) \|(?<mtu>[^\s]*)\|%{SPACE:sslcompression}\|%{SPACE:sslexpansion}\|(?<iamauthguid>[^\s]*) \|(?<applicationname>[^:]*) \|(?<os_version>[^:]*) \|(?<driverversion>[^:]*) \|%{SPACE:plugin_name} \|(?<protocolversion>[^:]*)\|(?<id>[^\s]*)"
]
}
}
redshift_guardium_connector{}
}
}
output {
stdout { codec => rubydebug }
}

