//
// Copyright IBM Corp. 2023 All rights reserved.
// SPDX-License-Identifier: Apache-2.0
//
filter {
if [type] == "icd_postgresql" {
	if "multiline" in [tags][0]{ 
        ruby {
            code => '
                event.set("message", event.get("message").split("\n"))
            '
        }
	}
    mutate {
       gsub => [ "message", "([A-Za-z]+) \d+ - CONN:\d+", "psql" ]
	}
	mutate {
       gsub => [ "message", "(PostgreSQL\s+JDBC\s+Driver)", "psql" ]
	}
    if "LOG:" in [message] {
    grok {
    match => {"message" => ["%{GREEDYDATA:UNKNOWN}\s%{TIMESTAMP_ISO8601:timestamp}\s%{TZ:timezone}\s\[%{WORD:language}]\s\[(?<ID1>[^/s]*)]\s\[(?<ID2>[^:]*)]\:\s\[(?<ID3>[^/s]*)]\s(?<usertype>[^\s]*)=(?<user>[^\s]*),(?<dbtype>[^\s]*)=(?<dbname>[^\s]*),(?<type>[^\s]*)=(?<clientIP>[^\s]*)\s%{DATA:Log}\:%{DATA:LogType}\:(?<logDetail>[^\"]*)\,\,\,%{DATA:sqlquery},<not logged>(?<other>[^/]*)\/(?<accountId>[^:]*)%{GREEDYDATA:detail}\:\:%{GREEDYDATA:otherdetail}"]
    }
    }
    }
    if "STATEMENT:" in [message] {
    grok {
    match => {"message" => ["%{GREEDYDATA:UNKNOWN}\s%{TIMESTAMP_ISO8601:timestamp} %{TZ:timezone}\s\[%{WORD:language}]\s\[(?<ID1>[^/s]*)]\s\[(?<ID2>[^:]*)]\:\s\[(?<ID3>[^/s]*)]\s(?<usertype>[^\s]*)=(?<user>[^\s]*),(?<dbtype>[^\s]*)=(?<dbname>[^\s]*),(?<type>[^\s]*)=(?<clientIP>[^\s]*)\s%{DATA:statement}\:\s(?<status>[^/]*)\"\,(?<other>[^/]*)\/(?<accountId>[^:]*)%{GREEDYDATA:detail}\:\:%{GREEDYDATA:otherdetail}"]
    }
    }
    }
	if "FATAL:" in [message] {
    grok {
    match => {"message" => ["%{GREEDYDATA:UNKNOWN}\s%{TIMESTAMP_ISO8601:timestamp} %{TZ:timezone}\s\[\[%{WORD:language}]]\s\[(?<ID1>[^/s]*)]\s\[(?<ID2>[^:]*)]\:\s\[(?<ID3>[^/s]*)]\s(?<usertype>[^\s]*)=(?<user>[^\s]*),(?<dbtype>[^\s]*)=(?<dbname>[^\s]*),(?<type>[^\s]*)=(?<clientIP>[^\s]*)\s%{DATA:statement}\:\s(?<status>[^/]*)\"\,(?<other>[^/]*)\/(?<accountId>[^:]*)%{GREEDYDATA:detail}\:\:%{GREEDYDATA:otherdetail}"]
    }
    }
    }
    if "WARNING:" in [message] or "INFO:" in [message] or "ERROR:" in [message] or "CONTEXT:" in [message] or "DETAIL:" in [message] or "_grokparsefailure"  in [tags] or "icdpostgresql_json_parse_error"  in [tags] or "EXISTS dblink" in [message] or "HINT:" in [message] or "NOTICE:" in [message] or "SET DateStyle=ISO" in [message]
    {
      drop {}
    }

	mutate  
	{
		add_field => {"pre_fix" => "%{[message][0]}"}
	}
	if ("[00000]" in [pre_fix] and "STATEMENT" in [pre_fix]) or "statement" in [pre_fix]
	{
		drop {}
	}
	mutate
	{
		remove_field => [ "pre_fix"]
	}

	icd_postgresql_guardium_filter{}

}
}