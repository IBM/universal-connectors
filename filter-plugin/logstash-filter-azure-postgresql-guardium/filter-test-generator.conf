input {
   generator {
        count => 1 lines => ['{"records": [{"LogicalServerName": "mypssqlserver","SubscriptionId": "ae9b474e-c278-4d98-85ba-e3a7f057870b", "ResourceGroup": "myresourcegroup", "time": "2022-03-08T14:18:02Z","resourceId": "/SUBSCRIPTIONS/AE9B474E-C278-4D98-85BA-E3A7F057870B/RESOURCEGROUPS/MYRESOURCEGROUP/PROVIDERS/MICROSOFT.DBFORPOSTGRESQL/SERVERS/MYPSSQLSERVER", "category": "PostgreSQLLogs", "operationName": "LogEvent", "properties": {"prefix": "2022-03-08 14:18:02 UTC:183.87.60.14(43986):postgres@postgres:[5560]:psql:00000","mes***REMOVED***ge": "AUDIT: SESSION,13,1,WRITE,INSERT,,,INSERT INTO employee4 values (101, emp1, 3);,<none>","detail": "","errorLevel": "LOG","domain": "postgres-11","schemaName": "","tableName": "","columnName": "","datatypeName": ""}}]}']
		type => "azure_event_hub"
		add_field => {"enrollmentId" => "1234567"}
		}
	}	

filter
{
	if [type] == "azure_event_hub"
    {
        json 
			{
				source => "mes***REMOVED***ge"   
            }
        split
			{
				field => "records"
			}
        mutate 
			{       
				add_field => {"pre_fix" => "%{[records][properties][prefix]}"}
				add_field => {"tempmes***REMOVED***ge" => "%{[records][properties][mes***REMOVED***ge]}"}
				add_field => {"e_level" => "%{[records][properties][errorLevel]}"} 
				add_field => {"server_instance_name" => "%{[records][LogicalServerName]}"}
			}
		grok 
			{
				match =>{ "pre_fix" => "(?<timestamp>[^[A-Z]]*)[A-Z]{3}:(?<client_ip>[^:]*):(?<db_user>[^@]*)@(?<db_name>[^:]*):\[(?<session_id>[^\]]*)\]:(?<app_name>[^:]*):(?<sql_state>[^:]*)"
						} 
			}
		if [db_name]
			{
				mutate 
					{
						replace => { "db_name"=> "%{enrollmentId}:%{server_instance_name}:%{db_name}" }
					}
			}
		mutate
			{
				add_field => { "server_hostname" => "%{enrollmentId}_%{server_instance_name}" }
			}
		if [client_ip] 
			{
				grok 
					{ match => {client_ip => "(?<clientIP>[^(]*)\((?<clientPort>[^)]*)"} }	
			}
		if[e_level] == "LOG"
				{
					if[tempmes***REMOVED***ge] =~ "FUNCTION"
						{
							grok{
									match => { "tempmes***REMOVED***ge" => "(?<audit>[^:]*):(?<session>[^:]*),%{GREEDYDATA:statement};%{GREEDYDATA:state}"}
								}
						}
					else{
							grok{
									match => { "tempmes***REMOVED***ge" => "(?<audit>[^:]*):(?<session>[^:]*),,%{GREEDYDATA:statement},%{GREEDYDATA:state}"}
								}
						}
					if[statement]
						{
							mutate 
								{
									gsub => ["statement","\"",""]			
								}
						}
				}
		if[e_level] == "ERROR"
			{
				if[tempmes***REMOVED***ge]
					{
						mutate 
							{
								gsub => ["tempmes***REMOVED***ge","\"",""]
							}
					}
			}
		if[e_level] == "FATAL"
			{
				if[tempmes***REMOVED***ge]
					{
						mutate 
							{
							gsub => ["tempmes***REMOVED***ge","\"",""]
							}
					}
			}
		if[pre_fix] =~ "azure_superuser"
			{
				drop {}
			}
		else{
			azure_postgresql_guardium_plugin_filter{}
			}
		mutate 
			{
				remove_field => ["@version","type","@timestamp","sequence","host", "records","ResourceGroup","resourceId","operationName","SubscriptionId","time","category","properties","pre_fix","db_user","timestamp","db_name","session_id","clientIP","clientPort","statement","sql_state","client_ip","session","server_instance_name","enrollmentId","state","tempmes***REMOVED***ge","mes***REMOVED***ge","e_level","audit","server_hostname","app_name"] 
			}
	}  
}

output
	{
		stdout
		{
			codec => rubydebug
		}
	
	}